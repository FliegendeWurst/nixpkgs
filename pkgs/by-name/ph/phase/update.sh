#!/usr/bin/env nix-shell
#!nix-shell -i bash -p curl jq nix-prefetch common-updater-scripts nix coreutils
# shellcheck shell=bash
set -euo pipefail

# Fetch the latest Phase CLI version from GitHub https://github.com/phasehq/cli
REPO="phasehq/cli"
RELEASE_TAG=$(curl -s "https://api.github.com/repos/$REPO/releases/latest" | jq -r .tag_name)
VERSION=${RELEASE_TAG#v}

echo "Latest Phase CLI release: $VERSION"

# Prepare x86 and arm64 targets for Linux and MacOS
ARCHS=(
  "x86_64-linux:linux_amd64"
  "x86_64-darwin:macos_amd64"
  "aarch64-linux:linux_arm64"
  "aarch64-darwin:macos_arm64"
)

# Updated paths for pkgs/by-name structure
NIXCONFIG=pkgs/by-name/ph/phase/package.nix
SRIFILE=pkgs/by-name/ph/phase/hashes.json

{
echo "{ \"_comment\": \"@generated by pkgs/by-name/ph/phase/update.sh\""
for arch in "${ARCHS[@]}"; do
  IFS=: read -r arch_name arch_target <<< "$arch"
  checksum_url="https://github.com/$REPO/releases/download/v${VERSION}/phase_cli_${arch_target}_${VERSION}.zip.sha256"
  sha256sum=$(curl -sL "$checksum_url" | cut -d' ' -f1)
  srihash="$(nix hash to-sri --type sha256 "$sha256sum")"
  echo ", \"$arch_name\": \"$srihash\""
done
echo "}"
} > "$SRIFILE"

# Set the version in package.nix
sed -i \
  '0,/version\s*=\s*".*";/s//version = "'"$VERSION"'";/' \
  "$NIXCONFIG"

echo "Updated hashes in $SRIFILE and CLI version in $NIXCONFIG."
